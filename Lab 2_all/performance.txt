





=================
pr1:-
=================
fs = 8000;
f = 4;
t = 0:1/fs:2;
A1 = 7;
A2 = 2;
A3 = 4;
F1 = 2;
F2 = 2;
F3 = 9;
x1 = A1*cos(2*pi*F1*t);
x2 = A2*cos(2*pi*F2*t);
x3 = A3*cos(2*pi*F3*t);
signal_x = x1 + x2 + x3;
nx = length(t);
subplot(2,1,1);
plot(t,signal_x,'linewidth',1);
xlabel('Time (s)');
ylabel('Amplitude');
title('Time-Domain Representation of Signal');
fftSignal = fft(signal_x);
fftSignal = fft(signal_x)/ (nx/2);
f = linspace(-fs/2, fs/2,nx);
axis([0 2 -10 20]);
subplot(2,1,2);
plot(f,abs(fftSignal),'linewidth',2);
xlabel('Frequency (Hz)');
ylabel('Amplitude');
title('Frequency-Domain Representation of Signal');
axis([-4500 4500 0 10]);



=================
pr2:-
=================

Code:
fs = 10000;
t = 0:1/fs:1;
f = 10;
A1 = 7;
A2 = 2;
A3 = 4;
F1 = 2;
F2 = 2;
F3 = 9;
x1 = A1*cos(2*pi*F1*t);
x2 = A2*cos(2*pi*F2*t);
x3 = A3*cos(2*pi*F3*t);
signal_x = x1 + x2 + x3;
partition = -9.5:5:9.5;
codebook = -10:4.5:10;
[index, quants] = quantiz(signal_x,partition, codebook);
figure
plot(t,signal_x,'x',t,quants,'.');
legend('Original signal','Quantized signal');



=============
pr3:-
============
Code:
fs = 10000;
t = 0:1/fs:1;
A1 = 7;
A2 = 2;
A3 = 4;
F1 = 2;
F2 = 2;
F3 = 9;
x1 = A1*cos(2*pi*F1*t);
x2 = A2*cos(2*pi*F2*t);
x3 = A3*cos(2*pi*F3*t);
signal_x = x1 + x2 + x3;
n = 8;
L = (2^n);
delta = (max(signal_x)-min(signal_x)) / (L-1);
xq = min(signal_x) + (round((signal_x-min(signal_x))/delta)).*delta;
plot(t,signal_x,'r-.','linewidth',1.5);
hold on
plot(t,xq,'k-.','linewidth',1.5);
xlabel('time')
ylabel('amplitude')
title('example of manual quantization')
legend('Original signal','quantized signal')



================
p3:-
===========
fs = 10000;
t = 0:1/fs:1;
A1 = 7;
A2 = 2;
A3 = 4;
F1 = 2;
F2 = 2;
F3 = 9;
x1 = A1 * cos(2 * pi * F1 * t);
x2 = A2 * cos(2 * pi * F2 * t);
x3 = A3 * cos(2 * pi * F3 * t);
signal_x = x1 + x2 + x3;
n = 3;  
L = 2^n;
delta = (max(signal_x) - min(signal_x)) / (L - 1);


xq = min(signal_x) + round((signal_x - min(signal_x)) / delta) * delta;


figure;


subplot(2,1,1);
plot(t, signal_x, 'r-.', 'linewidth', 1.5);
xlabel('Time')
ylabel('Amplitude')
title('Original Signal')
xlim([0, 1/F1]);  
ylim([-A1-A2-A3, A1+A2+A3]);  

subplot(2,1,2);
plot(t, xq, 'k-.', 'linewidth', 1.5);
xlabel('Time')
ylabel('Amplitude')
title('Quantized Signal')
xlim([0, 1/F1]);  
ylim([-A1-A2-A3, A1+A2+A3]); 

sgtitle('Comparison of Original and Quantized Signals');


fprintf('Quantization Parameters:\n');
fprintf('Number of levels (L): %d\n', L);
fprintf('Quantization step (delta): %.4f\n', delta);




